// Generated by Xata Codegen 0.26.5. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "User",
    columns: [
      { name: "username", type: "string" },
      { name: "email", type: "string", unique: true },
      { name: "password", type: "string" },
    ],
    revLinks: [{ column: "User", table: "Favorite" }],
  },
  {
    name: "Manga",
    columns: [
      { name: "title", type: "string" },
      { name: "author", type: "string" },
      { name: "synopsis", type: "text" },
      { name: "genres", type: "multiple" },
      { name: "cover", type: "file" },
      { name: "Chapter", type: "link", link: { table: "Chapter" } },
    ],
    revLinks: [
      { column: "Manga", table: "Chapter" },
      { column: "Manga", table: "Favorite" },
    ],
  },
  {
    name: "Chapter",
    columns: [
      { name: "title", type: "string" },
      { name: "number", type: "float" },
      { name: "publishdate", type: "datetime" },
      { name: "file", type: "file" },
      { name: "volume", type: "string" },
      { name: "Manga", type: "link", link: { table: "Manga" } },
    ],
    revLinks: [{ column: "Chapter", table: "Manga" }],
  },
  {
    name: "Favorite",
    columns: [
      { name: "User", type: "link", link: { table: "User" } },
      { name: "Manga", type: "link", link: { table: "Manga" } },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type User = InferredTypes["User"];
export type UserRecord = User & XataRecord;

export type Manga = InferredTypes["Manga"];
export type MangaRecord = Manga & XataRecord;

export type Chapter = InferredTypes["Chapter"];
export type ChapterRecord = Chapter & XataRecord;

export type Favorite = InferredTypes["Favorite"];
export type FavoriteRecord = Favorite & XataRecord;

export type DatabaseSchema = {
  User: UserRecord;
  Manga: MangaRecord;
  Chapter: ChapterRecord;
  Favorite: FavoriteRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://David-s-workspace-6uttk1.ap-southeast-2.xata.sh/db/nex-manga",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
